/**
 * Generated by Apache Royale Compiler from mx/core/UITextField.as
 * mx.core.UITextField
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.core.UITextField');
/* Royale Dependency List: mx.core.UITextFormat,mx.core.mx_internal,mx.events.FlexEvent,XML*/

goog.require('mx.core.UIComponent');
goog.require('mx.core.IUITextField');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @constructor
 * @extends {mx.core.UIComponent}
 * @implements {mx.core.IUITextField}
 */
mx.core.UITextField = function() {
  mx.core.UITextField.base(this, 'constructor');
};
goog.inherits(mx.core.UITextField, mx.core.UIComponent);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.UITextField', mx.core.UITextField);


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UITextField.TEXT_WIDTH_PADDING = 5;


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UITextField.TEXT_HEIGHT_PADDING = 4;


/**
 * @private
 * @type {number}
 */
mx.core.UITextField.prototype.mx_core_UITextField__x = 0;


/**
 * @export
 * @type {Text}
 */
mx.core.UITextField.prototype.textNode;


/**
 * @private
 * @type {string}
 */
mx.core.UITextField.prototype.mx_core_UITextField__text = "";


/**
 * @private
 * @type {Object}
 */
mx.core.UITextField.prototype.mx_core_UITextField__data;


/**
 * @private
 * @type {Object}
 */
mx.core.UITextField.prototype.mx_core_UITextField__styleName;


/**
 *  @asprivate
 * @export
 * @param {mx.core.UITextFormat} format
 * @param {number=} beginIndex
 * @param {number=} endIndex
 */
mx.core.UITextField.prototype.setTextFormat = function(format, beginIndex, endIndex) {
  beginIndex = typeof beginIndex !== 'undefined' ? beginIndex : -1;
  endIndex = typeof endIndex !== 'undefined' ? endIndex : -1;
};


/**
 *  @copy mx.core.UIComponent#move()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @override
 */
mx.core.UITextField.prototype.move = function(x, y) {
  mx.core.UITextField.superClass_.move.apply(this, [ x, y] );
};


/**
 *  @copy mx.core.UIComponent#setActualSize()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @override
 */
mx.core.UITextField.prototype.setActualSize = function(w, h) {
  mx.core.UITextField.superClass_.setActualSize.apply(this, [ w, h] );
};


/**
 *  @copy mx.core.UIComponent#getStyle()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @override
 */
mx.core.UITextField.prototype.getStyle = function(styleProp) {
  return mx.core.UITextField.superClass_.getStyle.apply(this, [ styleProp] );
};


/**
 *  Sets the font color of the text.
 *
 *  @asparam color The new font color.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @param {number} color
 */
mx.core.UITextField.prototype.setColor = function(color) {
};


/**
 *  @asprivate
 * @export
 * @return {mx.core.UITextFormat}
 */
mx.core.UITextField.prototype.getUITextFormat = function() {
  return new mx.core.UITextFormat(this.systemManager);
};


/**
 * @export
 * @param {string=} truncationIndicator
 * @return {boolean}
 */
mx.core.UITextField.prototype.truncateToFit = function(truncationIndicator) {
  truncationIndicator = typeof truncationIndicator !== 'undefined' ? truncationIndicator : null;
  return true;
};


mx.core.UITextField.prototype.get__x = function() {
  return mx.core.UITextField.superClass_.get__x.apply(this);
};


mx.core.UITextField.prototype.set__x = function(value) {
  this.mx_core_UITextField__x = value;
  mx.core.UITextField.superClass_.set__x.apply(this, [ value] );
};


mx.core.UITextField.prototype.set__width = function(value) {
  mx.core.UITextField.superClass_.set__width.apply(this, [ value] );
};


mx.core.UITextField.prototype.get__htmlText = function() {
  
  return this.element.innerHTML;
};


mx.core.UITextField.prototype.set__htmlText = function(value) {
  
  this.element.innerHTML = value;
  this.dispatchEvent('textChange');
  this.invalidateSize();
};


mx.core.UITextField.prototype.get__text = function() {
  
  return this.mx_core_UITextField__text;
};


mx.core.UITextField.prototype.set__text = function(value) {
  
  if (this.textNode) {
    this.mx_core_UITextField__text = value;
    this.textNode.nodeValue = value;
    this.dispatchEvent('textChange');
  }
  this.invalidateSize();
};


mx.core.UITextField.prototype.get__data = function() {
  return this.mx_core_UITextField__data;
};


mx.core.UITextField.prototype.set__data = function(value) {
  var /** @type {*} */ newText;
  this.mx_core_UITextField__data = value;
  this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.DATA_CHANGE));
};


mx.core.UITextField.prototype.get__measuredHeight = function() {
  return mx.core.UITextField.superClass_.get__measuredHeight.apply(this);
};


mx.core.UITextField.prototype.get__measuredWidth = function() {
  return mx.core.UITextField.superClass_.get__measuredWidth.apply(this);
};


mx.core.UITextField.prototype.get__styleName = function() {
  return mx.core.UITextField.superClass_.get__styleName.apply(this);
};


mx.core.UITextField.prototype.set__styleName = function(value) {
  if (this.mx_core_UITextField__styleName === value)
    return;
  this.mx_core_UITextField__styleName = value;
  mx.core.UITextField.superClass_.set__styleName.apply(this, [ value] );
};


mx.core.UITextField.prototype.get__selectable = function() {
  return true;
};


mx.core.UITextField.prototype.set__selectable = function(value) {
};


mx.core.UITextField.prototype.get__getCharIndexAtPoint = function() {
  return 0;
};


mx.core.UITextField.prototype.set__getCharIndexAtPoint = function(value) {
};


mx.core.UITextField.prototype.get__textWidth = function() {
  return this.width;
};


mx.core.UITextField.prototype.get__textHeight = function() {
  return this.height;
};


mx.core.UITextField.prototype.get__wordWrap = function() {
  return true;
};


mx.core.UITextField.prototype.set__wordWrap = function(value) {
};


Object.defineProperties(mx.core.UITextField.prototype, /** @lends {mx.core.UITextField.prototype} */ {
/**
  * @export
  * @type {number} */
x: {
get: mx.core.UITextField.prototype.get__x,
set: mx.core.UITextField.prototype.set__x},
/**
  * @export
  * @type {number} */
width: {
get: org.apache.royale.core.UIBase.prototype.get__width,
set: mx.core.UITextField.prototype.set__width},
/**
  * @export
  * @type {string} */
htmlText: {
get: mx.core.UITextField.prototype.get__htmlText,
set: mx.core.UITextField.prototype.set__htmlText},
/**
  * @export
  * @type {string} */
text: {
get: mx.core.UITextField.prototype.get__text,
set: mx.core.UITextField.prototype.set__text},
/**
  * @export
  * @type {Object} */
data: {
get: mx.core.UITextField.prototype.get__data,
set: mx.core.UITextField.prototype.set__data},
/**
  * @export
  * @type {number} */
measuredHeight: {
get: mx.core.UITextField.prototype.get__measuredHeight,
set: mx.core.UIComponent.prototype.set__measuredHeight},
/**
  * @export
  * @type {number} */
measuredWidth: {
get: mx.core.UITextField.prototype.get__measuredWidth,
set: mx.core.UIComponent.prototype.set__measuredWidth},
/**
  * @export
  * @type {Object} */
styleName: {
get: mx.core.UITextField.prototype.get__styleName,
set: mx.core.UITextField.prototype.set__styleName},
/**
  * @export
  * @type {boolean} */
selectable: {
get: mx.core.UITextField.prototype.get__selectable,
set: mx.core.UITextField.prototype.set__selectable},
/**
  * @export
  * @type {number} */
getCharIndexAtPoint: {
get: mx.core.UITextField.prototype.get__getCharIndexAtPoint,
set: mx.core.UITextField.prototype.set__getCharIndexAtPoint},
/**
  * @export
  * @type {number} */
textWidth: {
get: mx.core.UITextField.prototype.get__textWidth},
/**
  * @export
  * @type {number} */
textHeight: {
get: mx.core.UITextField.prototype.get__textHeight},
/**
  * @export
  * @type {boolean} */
wordWrap: {
get: mx.core.UITextField.prototype.get__wordWrap,
set: mx.core.UITextField.prototype.set__wordWrap}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.UITextField.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'UITextField', qName: 'mx.core.UITextField', kind: 'class' }], interfaces: [mx.core.IUITextField] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.UITextField.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UITextField'},
        'width': { type: 'Number', access: 'writeonly', declaredBy: 'mx.core.UITextField'},
        'htmlText': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UITextField', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'htmlChange' } ] } ]; }},
        'text': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UITextField', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'textChange' } ] } ]; }},
        'data': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UITextField', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'dataChange' } ] } ]; }},
        'measuredHeight': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UITextField'},
        'measuredWidth': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UITextField'},
        'styleName': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UITextField'},
        'selectable': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UITextField'},
        'getCharIndexAtPoint': { type: 'int', access: 'readwrite', declaredBy: 'mx.core.UITextField'},
        'textWidth': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UITextField'},
        'textHeight': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UITextField'},
        'wordWrap': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UITextField'}
      };
    },
    methods: function () {
      return {
        'UITextField': { type: '', declaredBy: 'mx.core.UITextField'},
        'setTextFormat': { type: 'void', declaredBy: 'mx.core.UITextField', parameters: function () { return [ { index: 1, type: 'mx.core.UITextFormat', optional: false },{ index: 2, type: 'int', optional: true },{ index: 3, type: 'int', optional: true } ]; }},
        'move': { type: 'void', declaredBy: 'mx.core.UITextField', parameters: function () { return [ { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'setActualSize': { type: 'void', declaredBy: 'mx.core.UITextField', parameters: function () { return [ { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'getStyle': { type: '*', declaredBy: 'mx.core.UITextField', parameters: function () { return [ { index: 1, type: 'String', optional: false } ]; }},
        'setColor': { type: 'void', declaredBy: 'mx.core.UITextField', parameters: function () { return [ { index: 1, type: 'uint', optional: false } ]; }},
        'getUITextFormat': { type: 'mx.core.UITextFormat', declaredBy: 'mx.core.UITextField'},
        'truncateToFit': { type: 'Boolean', declaredBy: 'mx.core.UITextField', parameters: function () { return [ { index: 1, type: 'String', optional: true } ]; }}
      };
    }
  };
};
/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UITextField.prototype.ROYALE_REFLECTION_INFO.compileFlags = 26;
